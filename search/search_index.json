{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Birdwatch Documentation","text":"<p>Welcome to the Birdwatch documentation! Birdwatch is a simple command-line tool for logging and listing bird sightings.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code># Install\ngit clone https://github.com/mtnlark/birdwatch.git\ncd birdwatch\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n\n# Log your first sighting\npython -m birdwatch.cli log \"American Robin\"\n</code></pre>"},{"location":"#documentation-sections","title":"Documentation Sections","text":""},{"location":"#usage-guide","title":"Usage Guide","text":"<p>Comprehensive guide with detailed examples for:</p> <ul> <li>Logging bird sightings</li> <li>Listing and filtering observations</li> <li>Exporting data to CSV</li> <li>Best practices and tips</li> </ul>"},{"location":"#technical-reference","title":"Technical Reference","text":"<p>Detailed technical documentation covering:</p> <ul> <li>Complete command reference</li> <li>Parameter specifications</li> <li>Data formats</li> <li>Error handling</li> <li>System requirements</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>\ud83e\udd9c Simple command-line interface for logging bird sightings</li> <li>\ud83d\udd0d Filter sightings by species or location</li> <li>\ud83d\udcca Export data to CSV for analysis</li> <li>\ud83d\udcdd Add detailed notes to each observation</li> <li>\ud83d\udcbe Local JSON storage for all sightings</li> </ul>"},{"location":"#common-actions","title":"Common Actions","text":""},{"location":"#log-sightings","title":"Log Sightings","text":"<pre><code># Basic sighting\npython -m birdwatch.cli log \"Northern Cardinal\"\n\n# Detailed sighting\npython -m birdwatch.cli log \"American Robin\" \\\n    --location \"Central Park\" \\\n    --count 2 \\\n    --notes \"Pair with nest-building materials\"\n</code></pre>"},{"location":"#view-sightings","title":"View Sightings","text":"<pre><code># View all\npython -m birdwatch.cli list\n\n# Filter by species\npython -m birdwatch.cli list --species \"American Robin\"\n\n# Filter by location\npython -m birdwatch.cli list --location \"Central Park\"\n</code></pre>"},{"location":"#export-data","title":"Export Data","text":"<pre><code># Quick export\npython -m birdwatch.cli export\n\n# Named export\npython -m birdwatch.cli export --filename \"my_sightings.csv\"\n</code></pre>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>Use <code>--help</code> with any command for more information</li> <li>Check the Usage Guide for detailed examples</li> <li>Consult the Technical Reference for complete documentation</li> <li>Visit the GitHub repository for any updates</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>This is primarily a solo demo project I built to play around with tracking my own bird sightings locally and to serve as an example of Python CLI development with documentation. While it's mainly here for personal use, feel free to:</p> <ul> <li>Fork the repository</li> <li>Submit issues for bugs or suggestions</li> <li>Use it as inspiration for your own birding + coding fun!</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file for details.</p>"},{"location":"contributing/","title":"Contributing to Birdwatch","text":"<p>Hi there! \ud83d\udc4b As mentioned on the main page, Birdwatch is primarily a solo demo project I built to play around with locally tracking my own bird sightings and to serve as an example of Python CLI development with documentation.</p>"},{"location":"contributing/#quick-links","title":"Quick Links","text":"<ul> <li>Project Repository</li> <li>Usage Documentation</li> <li>Technical Reference</li> </ul>"},{"location":"contributing/#ways-to-contribute","title":"Ways to Contribute","text":""},{"location":"contributing/#using-birdwatch","title":"Using Birdwatch","text":"<p>The best way to contribute is honestly just to use Birdwatch! If you find it helpful for logging your own bird sightings, that's awesome. And if you're using it as inspiration or reference for your own projects, even better!</p>"},{"location":"contributing/#reporting-issues","title":"Reporting Issues","text":"<p>If you run into any problems, feel free to open an issue on GitHub. When reporting issues:</p> <ol> <li>Check if the issue already exists</li> <li>Include your Python version (<code>python --version</code>)</li> <li>Describe what you were trying to do</li> <li>Include any error messages</li> <li>If possible, include steps to reproduce the issue</li> </ol>"},{"location":"contributing/#code-contributions","title":"Code Contributions","text":"<p>While this is mainly a personal project, I'm open to pull requests that:</p> <ul> <li>Fix bugs</li> <li>Improve documentation</li> <li>Add useful error messages</li> <li>Enhance code comments</li> <li>Fix typos</li> </ul> <p>If you're thinking about adding new features, please open an issue first to discuss!</p>"},{"location":"contributing/#development-setup","title":"Development Setup","text":"<ol> <li> <p>Fork and clone the repository: <pre><code>git clone https://github.com/yourusername/birdwatch.git\ncd birdwatch\n</code></pre></p> </li> <li> <p>Create a virtual environment: <pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>Install dependencies: <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> </ol> <p>To run the documentation site locally: <pre><code>mkdocs serve\n</code></pre></p>"},{"location":"contributing/#code-style","title":"Code Style","text":"<ul> <li>Follow PEP 8 guidelines.</li> <li>Use meaningful variable names.</li> <li>Add docstrings to functions.</li> <li>Include comments for complex logic.</li> <li>Keep functions focused and small.</li> </ul>"},{"location":"contributing/#documentation","title":"Documentation","text":"<p>If you're updating documentation:</p> <ul> <li>Keep the friendly, conversational tone.</li> <li>Include practical examples.</li> <li>Update both the relevant .md file and docstrings if applicable.</li> <li>Check that all links work.</li> <li>Preview your changes locally, if possible.</li> </ul>"},{"location":"contributing/#commit-messages","title":"Commit Messages","text":"<p>Write clear commit messages that explain:</p> <ul> <li>What changes you made</li> <li>Why you made them</li> <li>Any special considerations</li> </ul> <p>Example: <pre><code>Add error message for invalid species names\n\n- Improves user experience by providing clear feedback\n- Helps users catch typos in species names\n- Includes suggestion for common misspellings\n</code></pre></p>"},{"location":"contributing/#a-note-on-scope","title":"A Note on Scope","text":"<p>Remember, Birdwatch is intentionally simple! It's meant to be:</p> <ul> <li>A personal bird sighting logger</li> <li>An example of Python CLI development</li> <li>A documentation reference</li> </ul> <p>If you're a dedicated birder who wants more comprehensive features, like adding media or tracking sightings in detail over the long term, you'll probably be better served by eBird, iNaturalist, and similarly full-featured birding apps.</p>"},{"location":"contributing/#questions","title":"Questions?","text":"<p>Feel free to open an issue if you have any questions. Happy birding! \ud83e\udd86\ud83e\udd9c\ud83e\udd89\ud83e\udd85\ud83d\udc26\u200d\u2b1b</p>"},{"location":"reference/","title":"Birdwatch Reference","text":"<p>This document provides detailed technical reference for all Birdwatch commands, parameters, data structures, and file formats.</p>"},{"location":"reference/#command-reference","title":"Command Reference","text":""},{"location":"reference/#global-options","title":"Global Options","text":"<p>These options are available for all commands:</p> <pre><code>--help    Show help message and exit\n</code></pre>"},{"location":"reference/#log","title":"log","text":"<p>Records a new bird sighting.</p> <pre><code>python -m birdwatch.cli log SPECIES [OPTIONS]\n</code></pre>"},{"location":"reference/#parameters","title":"Parameters","text":"Parameter Required Type Default Description <code>species</code> Yes string - Name of the bird species observed <code>--location</code> Prompted string - Location where the bird was seen <code>--count</code> No integer 1 Number of individuals observed <code>--notes</code> Prompted string \"\" Additional observations"},{"location":"reference/#return-value","title":"Return Value","text":"<p>Returns a dictionary containing the sighting data. <pre><code>{\n    \"species\": str,\n    \"location\": str,\n    \"count\": int,\n    \"notes\": str\n}\n</code></pre></p>"},{"location":"reference/#list","title":"list","text":"<p>Displays recorded bird sightings with optional filtering.</p> <pre><code>python -m birdwatch.cli list [OPTIONS]\n</code></pre>"},{"location":"reference/#parameters_1","title":"Parameters","text":"Parameter Required Type Default Description <code>--species</code> No string None Filter by species name (case insensitive) <code>--location</code> No string None Filter by location (case insensitive)"},{"location":"reference/#output-format","title":"Output Format","text":"<pre><code>N. [count] [species] at [location]\n   Notes: [notes]  # Only shown if notes exist\n</code></pre>"},{"location":"reference/#export","title":"export","text":"<p>Exports sightings to CSV format. The file is named <code>--sightings.csv</code> by default.</p> <pre><code>python -m birdwatch.cli export [OPTIONS]\n</code></pre>"},{"location":"reference/#parameters_2","title":"Parameters","text":"Parameter Required Type Default Description <code>--filename</code> No string \"bird_sightings_[timestamp].csv\" Output filename"},{"location":"reference/#csv-format","title":"CSV Format","text":"<p>The exported CSV file contains the following columns:</p> Column Type Description species string Bird species name location string Sighting location count integer Number of individuals notes string Additional observations export_timestamp string ISO format timestamp of export"},{"location":"reference/#data-storage","title":"Data Storage","text":""},{"location":"reference/#sightings-file","title":"Sightings File","text":"<p>Sightings are stored in <code>sightings.json</code> using the following format:</p> <pre><code>[\n    {\n        \"species\": \"American Robin\",\n        \"location\": \"Central Park - Ramble\",\n        \"count\": 2,\n        \"notes\": \"Pair building nest in maple tree\"\n    },\n    {\n        \"species\": \"Northern Cardinal\",\n        \"location\": \"Backyard Feeder\",\n        \"count\": 1,\n        \"notes\": \"Female, eating sunflower seeds\"\n    }\n]\n</code></pre>"},{"location":"reference/#file-locations","title":"File Locations","text":"File Location Purpose sightings.json Working directory Primary data storage *.csv User-specified Data exports"},{"location":"reference/#error-handling","title":"Error Handling","text":""},{"location":"reference/#common-error-messages","title":"Common Error Messages","text":"Error Message Cause Solution \"No sightings logged yet.\" Empty sightings file Log some sightings first \"No sightings found for species: X\" No matches for species filter Check species name spelling \"No sightings found for location: X\" No matches for location filter Check location name spelling \"Error exporting sightings: [error]\" Export file write error Check file permissions and disk space"},{"location":"reference/#exit-codes","title":"Exit Codes","text":"Code Meaning 0 Success 1 General error 2 Invalid command usage"},{"location":"reference/#dependencies","title":"Dependencies","text":"<ul> <li><code>--click</code>: Command line interface creation</li> <li><code>--json</code>: Data storage</li> <li><code>--csv</code>: Data export</li> <li><code>--datetime</code>: Timestamp generation</li> </ul>"},{"location":"reference/#environment-variables","title":"Environment Variables","text":"<p>Currently, Birdwatch does not use any environment variables.</p>"},{"location":"reference/#limitations","title":"Limitations","text":"<ul> <li>Maximum file size: No explicit limit (limited by system memory)</li> <li>Species name length: No explicit limit</li> <li>Notes length: No explicit limit</li> <li>Location name length: No explicit limit</li> <li>Number of sightings: No explicit limit</li> </ul>"},{"location":"reference/#version-compatibility","title":"Version Compatibility","text":"<p>Current version is compatible with:</p> <ul> <li>Python 3.6+</li> <li>Click 7.0+</li> <li>All major operating systems (Windows, macOS, Linux)</li> </ul>"},{"location":"usage/","title":"Using Birdwatch","text":"<p>Birdwatch is a command-line tool for logging and managing bird sightings. This guide covers all available commands and features.</p>"},{"location":"usage/#basic-commands","title":"Basic Commands","text":"<p>All commands are run using the pattern: <code>python -m birdwatch.cli [command] [arguments]</code></p>"},{"location":"usage/#logging-sightings","title":"Logging Sightings","text":"<p>The <code>log</code> command is used to record new bird sightings.</p>"},{"location":"usage/#basic-logging","title":"Basic Logging","text":"<pre><code># Simple sighting with prompted location and notes\npython -m birdwatch.cli log \"American Robin\"\nLocation: Prospect Park\nNotes (optional): Adult male, foraging on lawn\n\n# Quick sighting of multiple birds\npython -m birdwatch.cli log \"Canada Goose\" --location \"Lake Park\" --count 12 --notes \"Flying overhead in V formation\"\n\n# Detailed observation\npython -m birdwatch.cli log \"Northern Cardinal\" \\\n    --location \"Backyard Feeder\" \\\n    --count 1 \\\n    --notes \"Female, eating sunflower seeds, appears to be gathering food for nestlings\"\n</code></pre>"},{"location":"usage/#full-logging-options","title":"Full Logging Options","text":"<pre><code># Example of a detailed birding session\npython -m birdwatch.cli log \"American Robin\" \\\n    --location \"Central Park - Ramble\" \\\n    --count 2 \\\n    --notes \"Pair building nest in maple tree\"\n\npython -m birdwatch.cli log \"Black-capped Chickadee\" \\\n    --location \"Central Park - Bird Sanctuary\" \\\n    --count 4 \\\n    --notes \"Actively feeding in birch trees\"\n\npython -m birdwatch.cli log \"Red-tailed Hawk\" \\\n    --location \"Central Park - Great Lawn\" \\\n    --count 1 \\\n    --notes \"Adult perched on lamp post, eating prey (possibly squirrel)\"\n</code></pre>"},{"location":"usage/#log-command-parameters","title":"Log Command Parameters","text":"<ul> <li><code>species</code> (required): The name of the bird species</li> <li><code>--location</code> (prompted): Where you saw the bird</li> <li><code>--count</code> (optional): Number of individuals seen (default: 1)</li> <li><code>--notes</code> (prompted, optional): Any additional observations</li> </ul>"},{"location":"usage/#listing-sightings","title":"Listing Sightings","text":"<p>The <code>list</code> command displays your recorded sightings with various filtering options.</p>"},{"location":"usage/#view-all-sightings","title":"View All Sightings","text":"<pre><code># Shows all sightings in chronological order\npython -m birdwatch.cli list\n</code></pre> <pre><code>Example output:\n1. 2 American Robin at Central Park - Ramble\n   Notes: Pair building nest in maple tree\n2. 4 Black-capped Chickadee at Central Park - Bird Sanctuary\n   Notes: Actively feeding in birch trees\n3. 1 Red-tailed Hawk at Central Park - Great Lawn\n   Notes: Adult perched on lamp post, eating prey (possibly squirrel)\n</code></pre>"},{"location":"usage/#filtering-options","title":"Filtering Options","text":""},{"location":"usage/#filter-by-species","title":"Filter by Species","text":"<pre><code># Find all Robin sightings\npython -m birdwatch.cli list --species \"American Robin\"\n</code></pre> <pre><code>Example output:\n1. 2 American Robin at Central Park - Ramble\n   Notes: Pair building nest in maple tree\n2. 1 American Robin at Prospect Park\n   Notes: Adult male, foraging on lawn\n</code></pre> <pre><code># Track hawk activity\npython -m birdwatch.cli list --species \"Red-tailed Hawk\"\n</code></pre> <pre><code>Example output:\n1. 1 Red-tailed Hawk at Central Park - Great Lawn\n   Notes: Adult perched on lamp post, eating prey (possibly squirrel)\n</code></pre>"},{"location":"usage/#filter-by-location","title":"Filter by Location","text":"<pre><code># View all activity in a specific area\npython -m birdwatch.cli list --location \"Central Park - Bird Sanctuary\"\n</code></pre> <pre><code>Example output:\n1. 4 Black-capped Chickadee at Central Park - Bird Sanctuary\n   Notes: Actively feeding in birch trees\n</code></pre> <pre><code># Monitor backyard activity\npython -m birdwatch.cli list --location \"Backyard Feeder\"\n</code></pre> <pre><code>Example output:\n1. 1 Northern Cardinal at Backyard Feeder\n   Notes: Female, eating sunflower seeds, appears to be gathering food for nestlings\n</code></pre>"},{"location":"usage/#filter-by-both","title":"Filter by Both","text":"<pre><code># Track specific species in a particular location\npython -m birdwatch.cli list \\\n    --species \"American Robin\" \\\n    --location \"Central Park - Ramble\"\n</code></pre> <pre><code>Example output:\n1. 2 American Robin at Central Park - Ramble\n   Notes: Pair building nest in maple tree\n</code></pre>"},{"location":"usage/#list-command-parameters","title":"List Command Parameters","text":"<ul> <li><code>--species</code> (optional): Filter results to show only this species</li> <li><code>--location</code> (optional): Filter results to show only sightings from this location</li> </ul> <p>Note: Filters are case insensitive for easier matching.</p>"},{"location":"usage/#exporting-data","title":"Exporting Data","text":"<p>The <code>export</code> command lets you save sightings to a CSV file for use in spreadsheets or data analysis.</p>"},{"location":"usage/#basic-export","title":"Basic Export","text":"<pre><code># Export with automatic timestamp\npython -m birdwatch.cli export\n</code></pre> <pre><code>Successfully exported 6 sightings to bird_sightings_20250414_182605.csv\n</code></pre>"},{"location":"usage/#named-export","title":"Named Export","text":"<pre><code># Export with custom filename\npython -m birdwatch.cli export --filename \"april_2025_sightings.csv\"\n\n# Export for a specific location\npython -m birdwatch.cli export --filename \"central_park_records.csv\"\n\n# Export for data analysis\npython -m birdwatch.cli export --filename \"spring_migration_data.csv\"\n</code></pre> <pre><code>Successfully exported 6 sightings to april_2025_sightings.csv\n</code></pre>"},{"location":"usage/#export-command-parameters","title":"Export Command Parameters","text":"<ul> <li><code>--filename</code> (optional): Custom name for the export file</li> </ul>"},{"location":"usage/#csv-format","title":"CSV Format","text":"<p>The exported CSV file includes these columns:</p> <ul> <li>species: The bird species name</li> <li>location: Where the bird was seen</li> <li>count: Number of individuals</li> <li>notes: Additional observations</li> <li>export_timestamp: When the export was created</li> </ul>"},{"location":"usage/#data-storage","title":"Data Storage","text":"<p>All sightings are stored locally in a <code>sightings.json</code> file. This file is:</p> <ul> <li>Created automatically when you log your first sighting</li> <li>Updated with each new sighting</li> <li>Used as the source for listing and exporting</li> <li>Can be backed up or version controlled (though it's gitignored by default)</li> </ul>"},{"location":"usage/#tips-and-best-practices","title":"Tips and Best Practices","text":"<ol> <li>Species Names: Be consistent with species names; this makes filtering by species easier.</li> <li>Locations: Similarly, be consistent with location names to make filtering by location more effective.</li> <li>Notes: Include details like behavior, weather, or habitat in the notes to add more context to your sightings and improve the richness of your data.</li> <li>Regular Exports: Consider regular CSV exports to back up your bird sighting data.</li> <li>Multiple Locations: If you bird multiple locations, always use the location parameter when logging sightings to make sure your lists stay organized.</li> </ol>"},{"location":"usage/#error-handling","title":"Error Handling","text":"<ul> <li>If no sightings are found when filtering, you'll receive a clear message.</li> <li>Invalid commands or parameters will show usage help.</li> <li>Export errors (like permission issues) will be reported clearly.</li> </ul>"},{"location":"usage/#getting-help","title":"Getting Help","text":"<p>For any command, you can add <code>--help</code> to see available options: <pre><code>python -m birdwatch.cli --help\npython -m birdwatch.cli log --help\npython -m birdwatch.cli list --help\npython -m birdwatch.cli export --help\n</code></pre></p>"}]}